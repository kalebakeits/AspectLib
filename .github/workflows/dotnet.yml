name: Build, Test and Publish

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'AspectLib/**'
      - 'AspectLib.UnitTest/**'
      - 'AspectLib.Weaving.UnitTest/**'
      - 'nuget.config'
      - '.github/workflows/dotnet.yml'
    tags:
      - 'v*'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'AspectLib/**'
      - 'AspectLib.UnitTest/**'
      - 'AspectLib.Weaving.UnitTest/**'
      - 'nuget.config'
      - '.github/workflows/dotnet.yml'
jobs:
  test:
    runs-on: ubuntu-latest
    outputs:
      aspectlib_changed: ${{ steps.detect_changes.outputs.changed }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Detect AspectLib project changes
        id: detect_changes
        run: |
          CHANGED=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} | grep -E '^AspectLib/' || true)
          if [ -z "$CHANGED" ]; then
            echo "changed=false" >> $GITHUB_OUTPUT
          else
            echo "changed=true" >> $GITHUB_OUTPUT
          fi

      - name: Create local packages folder
        run: mkdir -p .nupkgs

      - name: Restore dependencies
        run: dotnet restore --configfile nuget.config

      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      - name: Run unit tests
        run: dotnet test --no-build --configuration Release --verbosity normal

  publish-alpha:
    runs-on: ubuntu-latest
    needs: test
    if: |
      github.ref == 'refs/heads/develop' &&
      needs.test.result == 'success' &&
      needs.test.outputs.aspectlib_changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore --configfile nuget.config

      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      - name: Generate version suffix
        run: echo "suffix=$(date +'%Y%m%d%H%M')" >> $GITHUB_ENV

      - name: Update project version
        run: |
          sed -i 's|\(<Version>1.0.0-alpha\.\)[^<]*|\1${{ env.suffix }}|' ./AspectLib/AspectLib.csproj

      - name: Pack NuGet package
        run: dotnet pack ./AspectLib/AspectLib.csproj --no-build --configuration Release --output .nupkgs

      - name: Publish package to GitHub Packages
        run: dotnet nuget push .nupkgs/*.nupkg --api-key ${{ secrets.ACTIONS_TOKEN }} --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --skip-duplicate

  publish-release:
    runs-on: ubuntu-latest
    needs: test
    if: |
      startsWith(github.ref, 'refs/tags/v') &&
      needs.test.result == 'success'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Restore dependencies
        run: dotnet restore --configfile nuget.config

      - name: Build solution
        run: dotnet build --no-restore --configuration Release

      - name: Pack NuGet package
        run: dotnet pack ./AspectLib/AspectLib.csproj --no-build --configuration Release --output .nupkgs

      - name: Publish package to GitHub Packages
        run: dotnet nuget push .nupkgs/*.nupkg --api-key ${{ secrets.ACTIONS_TOKEN }} --source https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json --skip-duplicate